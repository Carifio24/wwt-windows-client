//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace TerraViewer.CloudAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="apiSoap", Namespace="http://wwtserver/")]
    public partial class api : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FBAttachmentDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFBFileUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFBRealFileUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeBlockedFacebookUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContainersOperationCompleted;
        
        private System.Threading.SendOrPostCallback listBlobsInContainerOperationCompleted;
        
        private System.Threading.SendOrPostCallback listBlobsInDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteContainerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteBlockBlobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBlockBlobOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public api() {
            this.Url = global::TerraViewer.Properties.Settings.Default.WWTExplorer_CloudAPI_api;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FBAttachmentDeleteCompletedEventHandler FBAttachmentDeleteCompleted;
        
        /// <remarks/>
        public event getFBFileUrlCompletedEventHandler getFBFileUrlCompleted;
        
        /// <remarks/>
        public event getFBRealFileUrlCompletedEventHandler getFBRealFileUrlCompleted;
        
        /// <remarks/>
        public event ChangeBlockedFacebookUserCompletedEventHandler ChangeBlockedFacebookUserCompleted;
        
        /// <remarks/>
        public event getContainersCompletedEventHandler getContainersCompleted;
        
        /// <remarks/>
        public event listBlobsInContainerCompletedEventHandler listBlobsInContainerCompleted;
        
        /// <remarks/>
        public event listBlobsInDirectoryCompletedEventHandler listBlobsInDirectoryCompleted;
        
        /// <remarks/>
        public event deleteContainerCompletedEventHandler deleteContainerCompleted;
        
        /// <remarks/>
        public event deleteBlockBlobCompletedEventHandler deleteBlockBlobCompleted;
        
        /// <remarks/>
        public event getBlockBlobCompletedEventHandler getBlockBlobCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/FBAttachmentDelete", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FBAttachmentDelete(string LiveToken, long FBFileId) {
            object[] results = this.Invoke("FBAttachmentDelete", new object[] {
                        LiveToken,
                        FBFileId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FBAttachmentDeleteAsync(string LiveToken, long FBFileId) {
            this.FBAttachmentDeleteAsync(LiveToken, FBFileId, null);
        }
        
        /// <remarks/>
        public void FBAttachmentDeleteAsync(string LiveToken, long FBFileId, object userState) {
            if ((this.FBAttachmentDeleteOperationCompleted == null)) {
                this.FBAttachmentDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFBAttachmentDeleteOperationCompleted);
            }
            this.InvokeAsync("FBAttachmentDelete", new object[] {
                        LiveToken,
                        FBFileId}, this.FBAttachmentDeleteOperationCompleted, userState);
        }
        
        private void OnFBAttachmentDeleteOperationCompleted(object arg) {
            if ((this.FBAttachmentDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FBAttachmentDeleteCompleted(this, new FBAttachmentDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/getFBFileUrl", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFBFileUrl(long FBUserId, string md5) {
            object[] results = this.Invoke("getFBFileUrl", new object[] {
                        FBUserId,
                        md5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFBFileUrlAsync(long FBUserId, string md5) {
            this.getFBFileUrlAsync(FBUserId, md5, null);
        }
        
        /// <remarks/>
        public void getFBFileUrlAsync(long FBUserId, string md5, object userState) {
            if ((this.getFBFileUrlOperationCompleted == null)) {
                this.getFBFileUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFBFileUrlOperationCompleted);
            }
            this.InvokeAsync("getFBFileUrl", new object[] {
                        FBUserId,
                        md5}, this.getFBFileUrlOperationCompleted, userState);
        }
        
        private void OngetFBFileUrlOperationCompleted(object arg) {
            if ((this.getFBFileUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFBFileUrlCompleted(this, new getFBFileUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/getFBRealFileUrl", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFBRealFileUrl(long FBUserId, string md5, string contentType) {
            object[] results = this.Invoke("getFBRealFileUrl", new object[] {
                        FBUserId,
                        md5,
                        contentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFBRealFileUrlAsync(long FBUserId, string md5, string contentType) {
            this.getFBRealFileUrlAsync(FBUserId, md5, contentType, null);
        }
        
        /// <remarks/>
        public void getFBRealFileUrlAsync(long FBUserId, string md5, string contentType, object userState) {
            if ((this.getFBRealFileUrlOperationCompleted == null)) {
                this.getFBRealFileUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFBRealFileUrlOperationCompleted);
            }
            this.InvokeAsync("getFBRealFileUrl", new object[] {
                        FBUserId,
                        md5,
                        contentType}, this.getFBRealFileUrlOperationCompleted, userState);
        }
        
        private void OngetFBRealFileUrlOperationCompleted(object arg) {
            if ((this.getFBRealFileUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFBRealFileUrlCompleted(this, new getFBRealFileUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/ChangeBlockedFacebookUser", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeBlockedFacebookUser(string LiveToken, string FBUserId, bool block) {
            object[] results = this.Invoke("ChangeBlockedFacebookUser", new object[] {
                        LiveToken,
                        FBUserId,
                        block});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeBlockedFacebookUserAsync(string LiveToken, string FBUserId, bool block) {
            this.ChangeBlockedFacebookUserAsync(LiveToken, FBUserId, block, null);
        }
        
        /// <remarks/>
        public void ChangeBlockedFacebookUserAsync(string LiveToken, string FBUserId, bool block, object userState) {
            if ((this.ChangeBlockedFacebookUserOperationCompleted == null)) {
                this.ChangeBlockedFacebookUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeBlockedFacebookUserOperationCompleted);
            }
            this.InvokeAsync("ChangeBlockedFacebookUser", new object[] {
                        LiveToken,
                        FBUserId,
                        block}, this.ChangeBlockedFacebookUserOperationCompleted, userState);
        }
        
        private void OnChangeBlockedFacebookUserOperationCompleted(object arg) {
            if ((this.ChangeBlockedFacebookUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeBlockedFacebookUserCompleted(this, new ChangeBlockedFacebookUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/getContainers", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getContainers(string LiveToken) {
            object[] results = this.Invoke("getContainers", new object[] {
                        LiveToken});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getContainersAsync(string LiveToken) {
            this.getContainersAsync(LiveToken, null);
        }
        
        /// <remarks/>
        public void getContainersAsync(string LiveToken, object userState) {
            if ((this.getContainersOperationCompleted == null)) {
                this.getContainersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContainersOperationCompleted);
            }
            this.InvokeAsync("getContainers", new object[] {
                        LiveToken}, this.getContainersOperationCompleted, userState);
        }
        
        private void OngetContainersOperationCompleted(object arg) {
            if ((this.getContainersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContainersCompleted(this, new getContainersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/listBlobsInContainer", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listBlobsInContainer(string LiveToken, string container) {
            object[] results = this.Invoke("listBlobsInContainer", new object[] {
                        LiveToken,
                        container});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listBlobsInContainerAsync(string LiveToken, string container) {
            this.listBlobsInContainerAsync(LiveToken, container, null);
        }
        
        /// <remarks/>
        public void listBlobsInContainerAsync(string LiveToken, string container, object userState) {
            if ((this.listBlobsInContainerOperationCompleted == null)) {
                this.listBlobsInContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistBlobsInContainerOperationCompleted);
            }
            this.InvokeAsync("listBlobsInContainer", new object[] {
                        LiveToken,
                        container}, this.listBlobsInContainerOperationCompleted, userState);
        }
        
        private void OnlistBlobsInContainerOperationCompleted(object arg) {
            if ((this.listBlobsInContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listBlobsInContainerCompleted(this, new listBlobsInContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/listBlobsInDirectory", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listBlobsInDirectory(string LiveToken, string directory) {
            object[] results = this.Invoke("listBlobsInDirectory", new object[] {
                        LiveToken,
                        directory});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listBlobsInDirectoryAsync(string LiveToken, string directory) {
            this.listBlobsInDirectoryAsync(LiveToken, directory, null);
        }
        
        /// <remarks/>
        public void listBlobsInDirectoryAsync(string LiveToken, string directory, object userState) {
            if ((this.listBlobsInDirectoryOperationCompleted == null)) {
                this.listBlobsInDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistBlobsInDirectoryOperationCompleted);
            }
            this.InvokeAsync("listBlobsInDirectory", new object[] {
                        LiveToken,
                        directory}, this.listBlobsInDirectoryOperationCompleted, userState);
        }
        
        private void OnlistBlobsInDirectoryOperationCompleted(object arg) {
            if ((this.listBlobsInDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listBlobsInDirectoryCompleted(this, new listBlobsInDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/deleteContainer", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteContainer(string LiveToken, string container) {
            object[] results = this.Invoke("deleteContainer", new object[] {
                        LiveToken,
                        container});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteContainerAsync(string LiveToken, string container) {
            this.deleteContainerAsync(LiveToken, container, null);
        }
        
        /// <remarks/>
        public void deleteContainerAsync(string LiveToken, string container, object userState) {
            if ((this.deleteContainerOperationCompleted == null)) {
                this.deleteContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteContainerOperationCompleted);
            }
            this.InvokeAsync("deleteContainer", new object[] {
                        LiveToken,
                        container}, this.deleteContainerOperationCompleted, userState);
        }
        
        private void OndeleteContainerOperationCompleted(object arg) {
            if ((this.deleteContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteContainerCompleted(this, new deleteContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/deleteBlockBlob", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteBlockBlob(string LiveToken, string blob) {
            object[] results = this.Invoke("deleteBlockBlob", new object[] {
                        LiveToken,
                        blob});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteBlockBlobAsync(string LiveToken, string blob) {
            this.deleteBlockBlobAsync(LiveToken, blob, null);
        }
        
        /// <remarks/>
        public void deleteBlockBlobAsync(string LiveToken, string blob, object userState) {
            if ((this.deleteBlockBlobOperationCompleted == null)) {
                this.deleteBlockBlobOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteBlockBlobOperationCompleted);
            }
            this.InvokeAsync("deleteBlockBlob", new object[] {
                        LiveToken,
                        blob}, this.deleteBlockBlobOperationCompleted, userState);
        }
        
        private void OndeleteBlockBlobOperationCompleted(object arg) {
            if ((this.deleteBlockBlobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteBlockBlobCompleted(this, new deleteBlockBlobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/getBlockBlob", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBlockBlob(string LiveToken, string blob) {
            object[] results = this.Invoke("getBlockBlob", new object[] {
                        LiveToken,
                        blob});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBlockBlobAsync(string LiveToken, string blob) {
            this.getBlockBlobAsync(LiveToken, blob, null);
        }
        
        /// <remarks/>
        public void getBlockBlobAsync(string LiveToken, string blob, object userState) {
            if ((this.getBlockBlobOperationCompleted == null)) {
                this.getBlockBlobOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBlockBlobOperationCompleted);
            }
            this.InvokeAsync("getBlockBlob", new object[] {
                        LiveToken,
                        blob}, this.getBlockBlobOperationCompleted, userState);
        }
        
        private void OngetBlockBlobOperationCompleted(object arg) {
            if ((this.getBlockBlobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBlockBlobCompleted(this, new getBlockBlobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FBAttachmentDeleteCompletedEventHandler(object sender, FBAttachmentDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FBAttachmentDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FBAttachmentDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFBFileUrlCompletedEventHandler(object sender, getFBFileUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFBFileUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFBFileUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFBRealFileUrlCompletedEventHandler(object sender, getFBRealFileUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFBRealFileUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFBRealFileUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeBlockedFacebookUserCompletedEventHandler(object sender, ChangeBlockedFacebookUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeBlockedFacebookUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeBlockedFacebookUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getContainersCompletedEventHandler(object sender, getContainersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContainersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContainersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void listBlobsInContainerCompletedEventHandler(object sender, listBlobsInContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listBlobsInContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listBlobsInContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void listBlobsInDirectoryCompletedEventHandler(object sender, listBlobsInDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listBlobsInDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listBlobsInDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteContainerCompletedEventHandler(object sender, deleteContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteBlockBlobCompletedEventHandler(object sender, deleteBlockBlobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteBlockBlobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteBlockBlobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBlockBlobCompletedEventHandler(object sender, getBlockBlobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBlockBlobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBlockBlobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591