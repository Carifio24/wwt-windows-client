//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace TerraViewer.CloudCommunitiesAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="apiCommunitiesSoap", Namespace="http://wwtserver/")]
    public partial class apiCommunities : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportAsOffensiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComponentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveComponentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OwnComponentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public apiCommunities() {
            this.Url = global::TerraViewer.Properties.Settings.Default.WWTExplorer_CloudCommunitiesAPI_apiCommunities;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event ChangeUserPermissionCompletedEventHandler ChangeUserPermissionCompleted;
        
        /// <remarks/>
        public event ReportAsOffensiveCompletedEventHandler ReportAsOffensiveCompleted;
        
        /// <remarks/>
        public event ArchiveReportsCompletedEventHandler ArchiveReportsCompleted;
        
        /// <remarks/>
        public event GetComponentsCompletedEventHandler GetComponentsCompleted;
        
        /// <remarks/>
        public event ApproveComponentsCompletedEventHandler ApproveComponentsCompleted;
        
        /// <remarks/>
        public event OwnComponentsCompletedEventHandler OwnComponentsCompleted;
        
        /// <remarks/>
        public event AddCommentCompletedEventHandler AddCommentCompleted;
        
        /// <remarks/>
        public event GetCommentsCompletedEventHandler GetCommentsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/Create", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Create(string LiveToken, string Name, string Logo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderContentMethods> OrderContentsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<PublicPermission> PublicAccess, string Description) {
            object[] results = this.Invoke("Create", new object[] {
                        LiveToken,
                        Name,
                        Logo,
                        OrderContentsId,
                        PublicAccess,
                        Description});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(string LiveToken, string Name, string Logo, System.Nullable<OrderContentMethods> OrderContentsId, System.Nullable<PublicPermission> PublicAccess, string Description) {
            this.CreateAsync(LiveToken, Name, Logo, OrderContentsId, PublicAccess, Description, null);
        }
        
        /// <remarks/>
        public void CreateAsync(string LiveToken, string Name, string Logo, System.Nullable<OrderContentMethods> OrderContentsId, System.Nullable<PublicPermission> PublicAccess, string Description, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        LiveToken,
                        Name,
                        Logo,
                        OrderContentsId,
                        PublicAccess,
                        Description}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/Get", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WWTCommunitySt Get(string LiveToken, long CommunityId, bool offensive, bool recursive, bool structOnly) {
            object[] results = this.Invoke("Get", new object[] {
                        LiveToken,
                        CommunityId,
                        offensive,
                        recursive,
                        structOnly});
            return ((WWTCommunitySt)(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string LiveToken, long CommunityId, bool offensive, bool recursive, bool structOnly) {
            this.GetAsync(LiveToken, CommunityId, offensive, recursive, structOnly, null);
        }
        
        /// <remarks/>
        public void GetAsync(string LiveToken, long CommunityId, bool offensive, bool recursive, bool structOnly, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        LiveToken,
                        CommunityId,
                        offensive,
                        recursive,
                        structOnly}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/Update", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Update(string LiveToken, long CommunityId, string Name, string Logo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderContentMethods> OrderContentsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<PublicPermission> PublicAccess) {
            object[] results = this.Invoke("Update", new object[] {
                        LiveToken,
                        CommunityId,
                        Name,
                        Logo,
                        OrderContentsId,
                        PublicAccess});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(string LiveToken, long CommunityId, string Name, string Logo, System.Nullable<OrderContentMethods> OrderContentsId, System.Nullable<PublicPermission> PublicAccess) {
            this.UpdateAsync(LiveToken, CommunityId, Name, Logo, OrderContentsId, PublicAccess, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(string LiveToken, long CommunityId, string Name, string Logo, System.Nullable<OrderContentMethods> OrderContentsId, System.Nullable<PublicPermission> PublicAccess, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        LiveToken,
                        CommunityId,
                        Name,
                        Logo,
                        OrderContentsId,
                        PublicAccess}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/Delete", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Delete(string LiveToken, long CommunityId) {
            object[] results = this.Invoke("Delete", new object[] {
                        LiveToken,
                        CommunityId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string LiveToken, long CommunityId) {
            this.DeleteAsync(LiveToken, CommunityId, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string LiveToken, long CommunityId, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        LiveToken,
                        CommunityId}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/GetUsers", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTUsersSt[] GetUsers(string LiveToken, long CommunityId, int pageSize, int pageNumber) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        LiveToken,
                        CommunityId,
                        pageSize,
                        pageNumber});
            return ((WWTUsersSt[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(string LiveToken, long CommunityId, int pageSize, int pageNumber) {
            this.GetUsersAsync(LiveToken, CommunityId, pageSize, pageNumber, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(string LiveToken, long CommunityId, int pageSize, int pageNumber, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        LiveToken,
                        CommunityId,
                        pageSize,
                        pageNumber}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/ChangeUserPermission", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserPermission(string LiveToken, long CommunityId, long UserId, Permission permission) {
            object[] results = this.Invoke("ChangeUserPermission", new object[] {
                        LiveToken,
                        CommunityId,
                        UserId,
                        permission});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPermissionAsync(string LiveToken, long CommunityId, long UserId, Permission permission) {
            this.ChangeUserPermissionAsync(LiveToken, CommunityId, UserId, permission, null);
        }
        
        /// <remarks/>
        public void ChangeUserPermissionAsync(string LiveToken, long CommunityId, long UserId, Permission permission, object userState) {
            if ((this.ChangeUserPermissionOperationCompleted == null)) {
                this.ChangeUserPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPermissionOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPermission", new object[] {
                        LiveToken,
                        CommunityId,
                        UserId,
                        permission}, this.ChangeUserPermissionOperationCompleted, userState);
        }
        
        private void OnChangeUserPermissionOperationCompleted(object arg) {
            if ((this.ChangeUserPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPermissionCompleted(this, new ChangeUserPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/ReportAsOffensive", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReportAsOffensive(string LiveToken, long CommunityId) {
            object[] results = this.Invoke("ReportAsOffensive", new object[] {
                        LiveToken,
                        CommunityId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReportAsOffensiveAsync(string LiveToken, long CommunityId) {
            this.ReportAsOffensiveAsync(LiveToken, CommunityId, null);
        }
        
        /// <remarks/>
        public void ReportAsOffensiveAsync(string LiveToken, long CommunityId, object userState) {
            if ((this.ReportAsOffensiveOperationCompleted == null)) {
                this.ReportAsOffensiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportAsOffensiveOperationCompleted);
            }
            this.InvokeAsync("ReportAsOffensive", new object[] {
                        LiveToken,
                        CommunityId}, this.ReportAsOffensiveOperationCompleted, userState);
        }
        
        private void OnReportAsOffensiveOperationCompleted(object arg) {
            if ((this.ReportAsOffensiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportAsOffensiveCompleted(this, new ReportAsOffensiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/ArchiveReports", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ArchiveReports(string LiveToken, long CommunityId) {
            object[] results = this.Invoke("ArchiveReports", new object[] {
                        LiveToken,
                        CommunityId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ArchiveReportsAsync(string LiveToken, long CommunityId) {
            this.ArchiveReportsAsync(LiveToken, CommunityId, null);
        }
        
        /// <remarks/>
        public void ArchiveReportsAsync(string LiveToken, long CommunityId, object userState) {
            if ((this.ArchiveReportsOperationCompleted == null)) {
                this.ArchiveReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveReportsOperationCompleted);
            }
            this.InvokeAsync("ArchiveReports", new object[] {
                        LiveToken,
                        CommunityId}, this.ArchiveReportsOperationCompleted, userState);
        }
        
        private void OnArchiveReportsOperationCompleted(object arg) {
            if ((this.ArchiveReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveReportsCompleted(this, new ArchiveReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/GetComponents", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTCommunityComponentSt[] GetComponents(string LiveToken, long CommunityId, bool offensive) {
            object[] results = this.Invoke("GetComponents", new object[] {
                        LiveToken,
                        CommunityId,
                        offensive});
            return ((WWTCommunityComponentSt[])(results[0]));
        }
        
        /// <remarks/>
        public void GetComponentsAsync(string LiveToken, long CommunityId, bool offensive) {
            this.GetComponentsAsync(LiveToken, CommunityId, offensive, null);
        }
        
        /// <remarks/>
        public void GetComponentsAsync(string LiveToken, long CommunityId, bool offensive, object userState) {
            if ((this.GetComponentsOperationCompleted == null)) {
                this.GetComponentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComponentsOperationCompleted);
            }
            this.InvokeAsync("GetComponents", new object[] {
                        LiveToken,
                        CommunityId,
                        offensive}, this.GetComponentsOperationCompleted, userState);
        }
        
        private void OnGetComponentsOperationCompleted(object arg) {
            if ((this.GetComponentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComponentsCompleted(this, new GetComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/ApproveComponents", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public longStringPair[] ApproveComponents(string LiveToken, long CommunityId, string ComponentsIdCSV) {
            object[] results = this.Invoke("ApproveComponents", new object[] {
                        LiveToken,
                        CommunityId,
                        ComponentsIdCSV});
            return ((longStringPair[])(results[0]));
        }
        
        /// <remarks/>
        public void ApproveComponentsAsync(string LiveToken, long CommunityId, string ComponentsIdCSV) {
            this.ApproveComponentsAsync(LiveToken, CommunityId, ComponentsIdCSV, null);
        }
        
        /// <remarks/>
        public void ApproveComponentsAsync(string LiveToken, long CommunityId, string ComponentsIdCSV, object userState) {
            if ((this.ApproveComponentsOperationCompleted == null)) {
                this.ApproveComponentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveComponentsOperationCompleted);
            }
            this.InvokeAsync("ApproveComponents", new object[] {
                        LiveToken,
                        CommunityId,
                        ComponentsIdCSV}, this.ApproveComponentsOperationCompleted, userState);
        }
        
        private void OnApproveComponentsOperationCompleted(object arg) {
            if ((this.ApproveComponentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveComponentsCompleted(this, new ApproveComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/OwnComponents", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public longStringPair[] OwnComponents(string LiveToken, long CommunityId, string ComponentsIdCSV) {
            object[] results = this.Invoke("OwnComponents", new object[] {
                        LiveToken,
                        CommunityId,
                        ComponentsIdCSV});
            return ((longStringPair[])(results[0]));
        }
        
        /// <remarks/>
        public void OwnComponentsAsync(string LiveToken, long CommunityId, string ComponentsIdCSV) {
            this.OwnComponentsAsync(LiveToken, CommunityId, ComponentsIdCSV, null);
        }
        
        /// <remarks/>
        public void OwnComponentsAsync(string LiveToken, long CommunityId, string ComponentsIdCSV, object userState) {
            if ((this.OwnComponentsOperationCompleted == null)) {
                this.OwnComponentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOwnComponentsOperationCompleted);
            }
            this.InvokeAsync("OwnComponents", new object[] {
                        LiveToken,
                        CommunityId,
                        ComponentsIdCSV}, this.OwnComponentsOperationCompleted, userState);
        }
        
        private void OnOwnComponentsOperationCompleted(object arg) {
            if ((this.OwnComponentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OwnComponentsCompleted(this, new OwnComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/AddComment", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddComment(string LiveToken, long CommunityId, string Comment) {
            object[] results = this.Invoke("AddComment", new object[] {
                        LiveToken,
                        CommunityId,
                        Comment});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommentAsync(string LiveToken, long CommunityId, string Comment) {
            this.AddCommentAsync(LiveToken, CommunityId, Comment, null);
        }
        
        /// <remarks/>
        public void AddCommentAsync(string LiveToken, long CommunityId, string Comment, object userState) {
            if ((this.AddCommentOperationCompleted == null)) {
                this.AddCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentOperationCompleted);
            }
            this.InvokeAsync("AddComment", new object[] {
                        LiveToken,
                        CommunityId,
                        Comment}, this.AddCommentOperationCompleted, userState);
        }
        
        private void OnAddCommentOperationCompleted(object arg) {
            if ((this.AddCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentCompleted(this, new AddCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wwtserver/GetComments", RequestNamespace="http://wwtserver/", ResponseNamespace="http://wwtserver/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTCommentsSt[] GetComments(string LiveToken, long CommunityId, int pageSize, int pageNumber, bool offensive) {
            object[] results = this.Invoke("GetComments", new object[] {
                        LiveToken,
                        CommunityId,
                        pageSize,
                        pageNumber,
                        offensive});
            return ((WWTCommentsSt[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsAsync(string LiveToken, long CommunityId, int pageSize, int pageNumber, bool offensive) {
            this.GetCommentsAsync(LiveToken, CommunityId, pageSize, pageNumber, offensive, null);
        }
        
        /// <remarks/>
        public void GetCommentsAsync(string LiveToken, long CommunityId, int pageSize, int pageNumber, bool offensive, object userState) {
            if ((this.GetCommentsOperationCompleted == null)) {
                this.GetCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsOperationCompleted);
            }
            this.InvokeAsync("GetComments", new object[] {
                        LiveToken,
                        CommunityId,
                        pageSize,
                        pageNumber,
                        offensive}, this.GetCommentsOperationCompleted, userState);
        }
        
        private void OnGetCommentsOperationCompleted(object arg) {
            if ((this.GetCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsCompleted(this, new GetCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public enum OrderContentMethods {
        
        /// <remarks/>
        Arbitrary,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        Rating,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public enum PublicPermission {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        PUBLIC_READ,
        
        /// <remarks/>
        REGISTERED_READ,
        
        /// <remarks/>
        REGISTERED_WRITE,
        
        /// <remarks/>
        PREAD_RWRITE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public partial class WWTCommunitySt {
        
        private bool isDeletedField;
        
        private Permission viewerAccessField;
        
        private long communityIdField;
        
        private long ownerIdField;
        
        private string nameField;
        
        private string logoField;
        
        private string viewerIdField;
        
        private PublicPermission publicAccessField;
        
        private System.DateTime creationTimeField;
        
        private System.DateTime lastUpdateTimeField;
        
        private WWTOffensiveSt[] offenseReportCountField;
        
        private WWTCommunityComponentSt[] componentsField;
        
        private OrderContentMethods orderContentsIdField;
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public Permission ViewerAccess {
            get {
                return this.viewerAccessField;
            }
            set {
                this.viewerAccessField = value;
            }
        }
        
        /// <remarks/>
        public long CommunityId {
            get {
                return this.communityIdField;
            }
            set {
                this.communityIdField = value;
            }
        }
        
        /// <remarks/>
        public long OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
        
        /// <remarks/>
        public string viewerId {
            get {
                return this.viewerIdField;
            }
            set {
                this.viewerIdField = value;
            }
        }
        
        /// <remarks/>
        public PublicPermission PublicAccess {
            get {
                return this.publicAccessField;
            }
            set {
                this.publicAccessField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateTime {
            get {
                return this.lastUpdateTimeField;
            }
            set {
                this.lastUpdateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTOffensiveSt[] offenseReportCount {
            get {
                return this.offenseReportCountField;
            }
            set {
                this.offenseReportCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTCommunityComponentSt[] components {
            get {
                return this.componentsField;
            }
            set {
                this.componentsField = value;
            }
        }
        
        /// <remarks/>
        public OrderContentMethods OrderContentsId {
            get {
                return this.orderContentsIdField;
            }
            set {
                this.orderContentsIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public enum Permission {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        WRITE,
        
        /// <remarks/>
        READ,
        
        /// <remarks/>
        OWNER,
        
        /// <remarks/>
        PENDING,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public partial class WWTOffensiveSt {
        
        private long countField;
        
        private OffensiveStatus statusField;
        
        /// <remarks/>
        public long count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public OffensiveStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public enum OffensiveStatus {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Archived,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public partial class WWTCommentsSt {
        
        private string commentField;
        
        private bool isDeletedField;
        
        private System.DateTime creationTimeField;
        
        private System.Nullable<long> communityComponentIdField;
        
        private long commentIdField;
        
        private long userIdField;
        
        private long communityIdField;
        
        private WWTOffensiveSt[] offenseReportCountField;
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CommunityComponentId {
            get {
                return this.communityComponentIdField;
            }
            set {
                this.communityComponentIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommunityId {
            get {
                return this.communityIdField;
            }
            set {
                this.communityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTOffensiveSt[] offenseReportCount {
            get {
                return this.offenseReportCountField;
            }
            set {
                this.offenseReportCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public partial class longStringPair {
        
        private long idField;
        
        private string resultField;
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public partial class WWTUsersSt {
        
        private long userIdField;
        
        private bool isDeletedField;
        
        private string userNameField;
        
        private System.DateTime creationDateField;
        
        private System.Nullable<Permission> permissionInCommunityField;
        
        private string facebookUserIdField;
        
        private string facebookKeyField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Permission> PermissionInCommunity {
            get {
                return this.permissionInCommunityField;
            }
            set {
                this.permissionInCommunityField = value;
            }
        }
        
        /// <remarks/>
        public string FacebookUserId {
            get {
                return this.facebookUserIdField;
            }
            set {
                this.facebookUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string FacebookKey {
            get {
                return this.facebookKeyField;
            }
            set {
                this.facebookKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public partial class WWTCommunityComponentSt {
        
        private System.Nullable<long> ownerComponentIdField;
        
        private Permission viewerAccessField;
        
        private bool isDeletedField;
        
        private bool approvedField;
        
        private PublicPermission publicAccessField;
        
        private WWTComponentTypes componentTypeIdField;
        
        private string nameField;
        
        private string logoField;
        
        private string viewerIdField;
        
        private string wTMLField;
        
        private System.DateTime creationTimeField;
        
        private System.DateTime lastUpdateTimeField;
        
        private WWTOffensiveSt[] offenseReportCountField;
        
        private WWTCommunityComponentSt[] componentsField;
        
        private OrderContentMethods orderContentsIdField;
        
        private long componentIdField;
        
        private long communityIdField;
        
        private long userIdField;
        
        private long ownerIdField;
        
        private long orderPositionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> OwnerComponentId {
            get {
                return this.ownerComponentIdField;
            }
            set {
                this.ownerComponentIdField = value;
            }
        }
        
        /// <remarks/>
        public Permission ViewerAccess {
            get {
                return this.viewerAccessField;
            }
            set {
                this.viewerAccessField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        public PublicPermission PublicAccess {
            get {
                return this.publicAccessField;
            }
            set {
                this.publicAccessField = value;
            }
        }
        
        /// <remarks/>
        public WWTComponentTypes ComponentTypeId {
            get {
                return this.componentTypeIdField;
            }
            set {
                this.componentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
        
        /// <remarks/>
        public string viewerId {
            get {
                return this.viewerIdField;
            }
            set {
                this.viewerIdField = value;
            }
        }
        
        /// <remarks/>
        public string WTML {
            get {
                return this.wTMLField;
            }
            set {
                this.wTMLField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateTime {
            get {
                return this.lastUpdateTimeField;
            }
            set {
                this.lastUpdateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTOffensiveSt[] offenseReportCount {
            get {
                return this.offenseReportCountField;
            }
            set {
                this.offenseReportCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WWTCommunityComponentSt[] components {
            get {
                return this.componentsField;
            }
            set {
                this.componentsField = value;
            }
        }
        
        /// <remarks/>
        public OrderContentMethods OrderContentsId {
            get {
                return this.orderContentsIdField;
            }
            set {
                this.orderContentsIdField = value;
            }
        }
        
        /// <remarks/>
        public long ComponentId {
            get {
                return this.componentIdField;
            }
            set {
                this.componentIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommunityId {
            get {
                return this.communityIdField;
            }
            set {
                this.communityIdField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public long OrderPosition {
            get {
                return this.orderPositionField;
            }
            set {
                this.orderPositionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wwtserver/")]
    public enum WWTComponentTypes {
        
        /// <remarks/>
        WWTCollection,
        
        /// <remarks/>
        WWTImage,
        
        /// <remarks/>
        WWTPlateImage,
        
        /// <remarks/>
        WWTSimpleComponent,
        
        /// <remarks/>
        WWTTour,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WWTCommunitySt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WWTCommunitySt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WWTUsersSt[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WWTUsersSt[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeUserPermissionCompletedEventHandler(object sender, ChangeUserPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportAsOffensiveCompletedEventHandler(object sender, ReportAsOffensiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportAsOffensiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportAsOffensiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ArchiveReportsCompletedEventHandler(object sender, ArchiveReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchiveReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchiveReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComponentsCompletedEventHandler(object sender, GetComponentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComponentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComponentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WWTCommunityComponentSt[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WWTCommunityComponentSt[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApproveComponentsCompletedEventHandler(object sender, ApproveComponentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveComponentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveComponentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public longStringPair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((longStringPair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OwnComponentsCompletedEventHandler(object sender, OwnComponentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OwnComponentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OwnComponentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public longStringPair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((longStringPair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddCommentCompletedEventHandler(object sender, AddCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentsCompletedEventHandler(object sender, GetCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WWTCommentsSt[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WWTCommentsSt[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591